[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pygpgme"
authors = [
    {name = "James Henstridge", email="james@jamesh.id.au"},
]
description = "A Python module for working with OpenPGP messages"
readme = "README.md"

license = {file = "LICENSE.txt"}
requires-python = ">= 3.9"
classifiers = [
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)',
    'Operating System :: POSIX',
    'Programming Language :: C',
    'Programming Language :: Python :: 3',
    'Topic :: Security :: Cryptography',
    'Topic :: Software Development :: Libraries :: Python Modules'
]

dependencies = [
    'typing_extensions; python_version < "3.10"'
]

dynamic = ["version"]

[project.optional-dependencies]

docs = [
    'Sphinx',
    'sphinx-rtd-theme',
]

[project.urls]
Repository = "https://github.com/jhenstridge/pygpgme"
Documentation = "https://pygpgme.readthedocs.io"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["gpgme"]

[tool.setuptools.dynamic]
version = {attr = "gpgme.__version__"}

[tool.setuptools.package-data]
gpgme = ["*.pyi", "py.typed"]

[tool.mypy]
exclude = ["setup.py", "build", "dist", "docs/source/conf.py"]
explicit_package_bases = true
mypy_path = "src"

disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true

[tool.cibuildwheel]

archs = ["auto"]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-armv7l-image = "manylinux_2_31"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_2"
musllinux-i686-image = "musllinux_1_2"
musllinux-aarch64-image = "musllinux_1_2"
musllinux-ppc64le-image = "musllinux_1_2"
musllinux-s390x-image = "musllinux_1_2"
musllinux-armv7l-image = "musllinux_1_2"

#manylinux-x86_64-image = "manylinux_2_28"
#musllinux-x86_64-image = "musllinux_1_2"

test-command = "python -m unittest discover -v -t {project} {project}/tests"

[tool.cibuildwheel.linux]
archs = ["auto64"]
before-all = "yum install -y gpgme-devel"

[tool.cibuildwheel.macos]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"
